︠4bacb753-96cc-4c98-a0b1-03572ea0aa42i︠
%md
# Number Suite

Here are the rules followed in order to generate numbers which can be factorized and benchmarked
︡b032129b-19d6-4d3a-8279-bfb663a7fcd3︡{"done":true,"md":"# Number Suite\n\nHere are the rules followed in order to generate numbers which can be factorized and benchmarked"}
︠41913fa1-f31c-4671-a3b8-755197983a91si︠
# Generates a number suite consisting of numberOfNumbers numbers of numberOfFactors primes between lowerLimit and upperLimit
def generateSuiteFromBounds(description="Description", lowerLimit = 3, upperLimit = 100, numberOfFactors = range(2, 20 + 1), numberOfNumbers = 1):
    suite = (description, [])
    P = Primes()

    latex = "\\begin{array}{l|l|l{2cm}}\n\\text{Number of factors} & N & \\text{Factors}\\\\\\hline\n"
    for i in range(len(numberOfFactors)):
        numbers = []
        for j in range(numberOfNumbers):
            # Generate random prime factors that must be larger than 2
            factors = [1] + [random_prime(max(3, upperLimit), False, lowerLimit) for k in range(numberOfFactors[i])]
            n = prod(factors)
            numbers.append((n, factors))
            latex += "%d & %d & %s\\\\\n"%(numberOfFactors[i], n, ", ".join([str(x) for x in factors]))
        suite[1].append((numberOfFactors[i], numbers))
    latex += "\n\\end{array}"

    return (suite, latex)
print "defined generateSuiteFromBounds"

# Generates a number suite consisting of numberOfNumbers numbers of numberOfFactors primes close to start
def generateSuiteFromProximity(description="Description", startValues = [2, 11, 31], numberOfFactors = range(2, 20 + 1), numberOfNumbers = 2):
    suite = (description, [])

    latex = "\\begin{array}{l|l|l{2cm}}\n\\text{Number of factors} & N & \\text{Factors}\\\\\\hline\n"
    for start in startValues:
        for i in range(len(numberOfFactors)):
            numbers = []
            for j in range(numberOfNumbers):
                factors = [1]
                factor = start
                # Switch between the a larger or smaller prime relative to start
                upper = False
                for k in range(numberOfFactors[i]):
                    for l in range(floor(random() * numberOfFactors[i])):
                        # Never allow a prime less than 3 (don't allow 2)
                        if upper or factor <= 3:
                            factor = factor.next_prime()
                        else:
                            factor = factor.previous_prime()
                    factors.append(factor)
                    factor = start
                    upper = not upper
                n = prod(factors)
                numbers.append((n, factors))
                latex += "%d & %d & %s\\\\\n"%(numberOfFactors[i], n, ", ".join([str(x) for x in factors]))
            suite[1].append((numberOfFactors[i], numbers))
    latex += "\n\\end{array}"

    return (suite, latex)
print "defined generateSuiteFromProximity"

# Generates growing numbers in bits. Factors range from bits to bits + 1. Only 2 factors
def generateGrowingSuiteFromBits(description="Description", startBits = 1, endBits = 60, numberOfNumbers = 1):
    P = Primes()
    suite = (description, [])

    latex = "\\begin{array}{l|l|l{2cm}}\n\\text{Number of bits} & N & \\text{Factors}\\\\\\hline\n"
    for i in range(startBits, endBits+1):
        numbers = []
        for j in range(numberOfNumbers):
            factors = [1] + [random_prime(2^(i+1), False, 2^i) for k in range(2)]
            # Remove the number 2 (move to the next prime)
            factors = [x.next_prime() if x == 2 else x for x in factors]
            n = prod(factors)
            numbers.append((n, factors))
            latex += "%d & %d & %s\\\\\n"%(i, n, ", ".join([str(x) for x in factors]))
        suite[1].append((i, numbers))
    latex += "\n\\end{array}"

    return (suite, latex)
print "defined generateGrowingSuiteFromBits"
︡47104410-c9cc-41a7-879d-4ef71c46f2da︡{"stdout":"defined generateSuiteFromBounds\n"}︡{"stdout":"defined generateSuiteFromProximity\n"}︡{"stdout":"defined generateGrowingSuiteFromBits\n"}︡{"done":true}︡
︠450edf10-5c35-4ba9-8409-aa0ab1df1fcasi︠
def tableFromSuite(suite):
    table = "count\tnumber\tfactors\n"
    for count, numbers in suite[1]:
        for number, factors in numbers:
            table += "%d\t%d\t%s"%(count, number, ", ".join(map(str, factors)))
    return table
print "defined tableFromSuite"
︡6367f1bc-7622-4657-a22d-ccb37bb8f73c︡{"stdout":"defined tableFromSuite\n"}︡{"done":true}︡
︠25eafaa0-4afd-48ff-bd5c-ffd103a5b36fi︠
%md
## Small primes ($2\leq p \leq 100$)
Results in composite primes of approximately 7-104 bits.
Factors are approximately 6 bits.
Factors are close to one another.
︡10eaedb1-062d-4265-b6f6-59cc4df134fb︡{"done":true,"md":"## Small primes ($2\\leq p \\leq 100$)\nResults in composite primes of approximately 7-104 bits.\nFactors are approximately 6 bits.\nFactors are close to one another."}
︠281b175f-9cae-4678-992b-af5130840652si︠
suite, latex = generateSuiteFromBounds(description="Small primes")

suite
︡01877254-1dab-4838-a53b-aa1beb88b9d9︡{"stdout":"('Small primes', [(2, [(65, [1, 5, 13])]), (3, [(439319, [1, 83, 67, 79])]), (4, [(7627033, [1, 71, 71, 17, 89])]), (5, [(414768407, [1, 23, 79, 53, 73, 59])]), (6, [(1009916961, [1, 3, 53, 79, 37, 41, 53])]), (7, [(2958903345, [1, 89, 3, 5, 19, 31, 53, 71])]), (8, [(56179813225, [1, 5, 5, 23, 71, 47, 67, 23, 19])]), (9, [(48523093058577, [1, 17, 83, 23, 53, 19, 83, 89, 67, 3])]), (10, [(127085873855613, [1, 19, 19, 53, 31, 23, 89, 37, 23, 3, 41])]), (11, [(12666477753016255, [1, 61, 59, 7, 59, 73, 29, 23, 71, 29, 5, 17])]), (12, [(896526833673856045093, [1, 79, 83, 59, 19, 83, 37, 37, 43, 67, 67, 67, 83])]), (13, [(7564064131067790489, [1, 13, 3, 11, 19, 97, 17, 17, 97, 83, 97, 19, 97, 23])]), (14, [(2551375649612696618049, [1, 59, 37, 97, 67, 23, 3, 13, 71, 71, 41, 29, 31, 83, 13])]), (15, [(6276366342645324443355061, [1, 97, 67, 31, 79, 43, 83, 67, 7, 59, 53, 7, 31, 47, 83, 89])]), (16, [(8991307004324920025202031, [1, 17, 29, 73, 17, 19, 23, 29, 83, 79, 19, 61, 37, 17, 97, 41, 61])]), (17, [(187744318593207344030011873, [1, 59, 17, 43, 43, 17, 19, 67, 11, 59, 61, 71, 67, 7, 41, 71, 23, 53])]), (18, [(3423248521985549575775474787, [1, 11, 19, 29, 11, 7, 7, 97, 79, 71, 3, 59, 73, 97, 73, 79, 97, 67, 41])]), (19, [(5464303302755414338488263716577, [1, 71, 71, 89, 79, 61, 23, 59, 97, 89, 11, 53, 47, 37, 13, 11, 23, 29, 23, 97])]), (20, [(4244120540141037745930948948375, [1, 43, 59, 59, 23, 31, 5, 59, 61, 61, 53, 29, 79, 5, 89, 59, 61, 19, 37, 53, 5])])])\n"}︡{"done":true}︡
︠b1fb3bac-de7c-4258-9c64-e496eb4eae30i︠
%md
## Medium primes ($1000 \leq p \leq 10000$)
Results in composite primes of approximately 24-242 bits.
Factors are approximately 13 bits.
Factors are relatively close to one another.
︡c05ac4da-c671-4f2c-8ce7-754ab44c73b5︡{"done":true,"md":"## Medium primes ($1000 \\leq p \\leq 10000$)\nResults in composite primes of approximately 24-242 bits.\nFactors are approximately 13 bits.\nFactors are relatively close to one another."}
︠6979ac6b-733c-4d38-bb2c-4834b2ba39c1is︠
suite, latex = generateSuiteFromBounds(lowerLimit = 1000, upperLimit = 10000)

suite
︡aaccaab9-bff0-4b28-af79-1a91750d02e6︡{"stdout":"('Description', [(2, [(31139833, [1, 9371, 3323])]), (3, [(107247309859, [1, 9551, 5443, 2063])]), (4, [(378587324199437, [1, 6709, 8429, 1217, 5501])]), (5, [(934032906096998941, [1, 8513, 2939, 5483, 5531, 1231])]), (6, [(59581635568152279729097, [1, 6619, 8803, 8543, 7927, 2803, 5387])]), (7, [(93086129232924779570504701, [1, 5807, 6361, 7699, 1303, 2887, 9791, 8887])]), (8, [(52607046045636351714681337771, [1, 9337, 2063, 8017, 3457, 1237, 5569, 4297, 3329])]), (9, [(190004266933408432895854682775143, [1, 3209, 4519, 3371, 3797, 2143, 2239, 2693, 8501, 9319])]), (10, [(33883775640111667216298721024758777293, [1, 9539, 7229, 6691, 9479, 2719, 5659, 2137, 6569, 5879, 6101])]), (11, [(114544016452990426667787626474423688373529, [1, 1733, 7333, 6329, 4357, 9533, 3911, 4363, 5153, 9689, 9833, 4093])]), (12, [(230553200008577183127898434370098170345909197, [1, 2069, 6337, 9001, 8087, 9857, 7417, 6869, 1319, 3583, 8923, 4507, 2531])]), (13, [(122514905180213779975184872876372716975888412551289, [1, 8699, 7177, 6449, 8447, 8581, 4243, 8191, 7817, 9173, 9343, 5531, 8111, 4019])]), (14, [(2548767237928117709515953528649221177790495079664103, [1, 5881, 9281, 5483, 4621, 4523, 9041, 1103, 8747, 6203, 5237, 8831, 2411, 4349, 1553])]), (15, [(1412598243520648226627620925269939936342581079491886843, [1, 1657, 6701, 1249, 8761, 1123, 4211, 8231, 3967, 1609, 6841, 3181, 6301, 6101, 5813, 9623])]), (16, [(200512581326119426932094261093841742912953528794382717764283, [1, 5689, 6983, 2957, 1979, 2549, 4391, 1163, 9199, 6421, 5527, 9679, 4597, 9461, 6803, 7681, 9227])]), (17, [(131594498112159495424946508517585006079278511536913670582450713, [1, 2267, 6827, 1321, 3659, 9619, 7591, 5051, 8941, 1489, 1571, 8147, 4663, 5417, 9227, 2467, 7793, 6247])]), (18, [(393439709448142600240664782694216898138256351102165716143351349263, [1, 4999, 8243, 1109, 1493, 6991, 4591, 2273, 3187, 6869, 7253, 7369, 1619, 9029, 4159, 9533, 2927, 4597, 8663])]), (19, [(21912204477209799768597924927565845078735612878949408847890480566397247, [1, 6481, 4909, 1051, 3499, 7079, 8863, 4391, 4289, 9049, 2213, 6379, 7919, 7753, 6553, 6073, 2791, 4493, 6301, 6427])]), (20, [(124961960748524074669158778843009036077415126392228229113753426226980355117, [1, 6221, 4211, 8059, 6043, 8707, 7541, 2029, 1373, 5449, 8971, 6373, 4243, 5351, 6131, 5477, 2011, 9931, 1483, 9029, 8431])])])\n"}︡{"done":true}︡
︠3469504d-0998-4acd-8096-6084d61a627bi︠
%md
## Large primes ($50000 \leq p \leq 100000$)
Results in composite primes of approximately 30-293 bits.
Factors are approximately 17 bits.
︡01d1e250-3c55-47ae-94b2-a2b7b2066775︡{"done":true,"md":"## Large primes ($50000 \\leq p \\leq 100000$)\nResults in composite primes of approximately 30-293 bits.\nFactors are approximately 17 bits."}
︠b8aeb994-be20-4c89-a03e-abcf61e09c51is︠
suite, latex = generateSuiteFromBounds(description="Large primes", lowerLimit = 50000, upperLimit = 100000)

suite
#show(latex)
︡f3bc3d4c-e722-49bb-913f-a9488a1de19a︡{"stdout":"('Large primes', [(2, [(6670168621, [1, 79979, 83399])]), (3, [(791544185678047, [1, 95009, 96001, 86783])]), (4, [(27801805736396470091, [1, 70667, 69931, 68879, 81677])]), (5, [(2875895542912678830153703, [1, 79187, 87539, 60397, 74413, 92311])]), (6, [(223831399503607241029233280207, [1, 80701, 91141, 59659, 65839, 97549, 79423])]), (7, [(12619319039191707460171979676289723, [1, 57803, 90353, 64033, 88339, 52517, 89231, 91153])]), (8, [(583042430238739942951705366778372505943, [1, 91393, 57131, 62207, 65267, 80761, 98897, 66943, 51439])]), (9, [(50466713713562010742094764552990641632607803, [1, 75533, 59729, 94477, 54347, 56951, 63601, 87973, 73309, 93263])]), (10, [(3586768420322608160632355936399207346085749091483, [1, 63419, 79967, 95929, 76541, 87181, 51797, 52813, 71597, 58313, 96739])]), (11, [(238941156252804662523654811483568846106295496535028751, [1, 99689, 95467, 64433, 51839, 88007, 55439, 62191, 65213, 64151, 71143, 83233])]), (12, [(29626175217438900511804582416517301841264871954859385922051, [1, 60647, 63659, 66751, 56821, 65353, 70241, 80279, 91771, 88903, 80683, 91957, 90697])]), (13, [(4182380863824843366637101867168485717450297795333332106103176231, [1, 71233, 65717, 73303, 68023, 76717, 89317, 82279, 83063, 87721, 90911, 95633, 58477, 85793])]), (14, [(155111187561011097197606976089850185601871788037292142562770073395629, [1, 69941, 55079, 85259, 60457, 71693, 77933, 71867, 69763, 61717, 97301, 75617, 93463, 90071, 72949])]), (15, [(13253550232918844983263279699837973336198369819794630832927842414319639411, [1, 77509, 96469, 80909, 86851, 76819, 55717, 89839, 76243, 66733, 63659, 50329, 72019, 73369, 76943, 98981])]), (16, [(700793451458186618376956559102627976704689461294356860220385387689495121820011, [1, 66617, 55213, 83089, 65837, 99679, 80077, 75577, 80039, 95789, 91283, 88471, 51949, 67343, 57347, 79633, 58367])]), (17, [(33757561132185002001775952476603148767163607231993417587983668039695938361863327427, [1, 58963, 97381, 79589, 95917, 88607, 64919, 78317, 65063, 86243, 51769, 78203, 78877, 59981, 50261, 53437, 88493, 66923])]), (18, [(3264196790131923276990201897079135726861412672360510832755699183310065745219424026535231, [1, 92699, 78517, 59693, 83933, 60913, 83717, 55987, 97651, 85333, 78979, 89521, 87559, 83203, 54517, 94907, 53611, 52501, 50159])]), (19, [(849074075357385350273985268995695763692811891997984455483201046494382549374927205994097539773, [1, 94033, 95239, 87961, 68279, 54877, 83717, 89563, 90439, 86677, 87187, 65687, 58237, 89087, 83063, 58013, 74411, 87317, 62351, 84377])]), (20, [(28988149875324363734826860547832313397581202401431668073562500294280878676360194347552776428533547, [1, 73133, 56941, 75209, 71503, 76907, 80713, 66701, 94063, 52747, 85091, 93239, 91639, 89209, 52501, 93001, 57329, 85333, 89213, 67079, 67967])])])\n"}︡{"done":true}︡
︠8f93396c-64e1-432a-aa21-4cc02deab876i︠
%md
## Larger primes ($250000 \leq p \leq 1000000$)
︡91265495-9b73-417d-b825-4fe74af19f96︡{"done":true,"md":"## Larger primes ($250000 \\leq p \\leq 1000000$)"}
︠43183a58-023b-47df-925b-57ce6905585bis︠
suite, latex = generateSuiteFromBounds(description="Larger primes", lowerLimit = 250000, upperLimit = 1000000)

suite
︡ee0e1ddb-9d17-4a14-b0b6-398747693d0a︡{"stdout":"('Larger primes', [(2, [(228381372449, [1, 703489, 324641])]), (3, [(445245400532432443, [1, 915247, 570881, 852149])]), (4, [(94578059512115476078693, [1, 405949, 777251, 690887, 433861])]), (5, [(12142373610796075835818739069, [1, 385193, 312311, 309629, 730819, 446053])]), (6, [(12702668969362957564048090285924423, [1, 384547, 309359, 312779, 645503, 799651, 661373])]), (7, [(9278439463365350916306161226693029480651, [1, 759371, 473617, 263503, 656809, 596987, 307651, 811607])]), (8, [(10071297947401787872637210568112721695789808629, [1, 553591, 605443, 653593, 398059, 452521, 468661, 964693, 564523])]), (9, [(22962788313830948927993682911473115120840248717946453, [1, 592531, 687007, 586129, 450581, 735073, 992737, 620437, 563039, 837887])]), (10, [(1001543831379569871201991898454512221949032514372621261669, [1, 331451, 345757, 514177, 912911, 381949, 408637, 279607, 987659, 720059, 599891])]), (11, [(2712413489753766815314445878245735688634706265791536122441393579, [1, 681167, 306431, 840979, 505481, 835459, 620957, 825397, 835673, 298211, 886987, 322963])]), (12, [(2472860522473301269152091750351086233877390355978921924747941040564967, [1, 794041, 916073, 874373, 523669, 756563, 811259, 962903, 634267, 401309, 275453, 346207, 517549])]), (13, [(153735881993807450268740447867435767162291297303516953407414736766018515397, [1, 449569, 933761, 475421, 257953, 383083, 324647, 891661, 704153, 258469, 621259, 581869, 820643, 498761])]), (14, [(490195501233586023582631853988418040552940628600800387749030617124480291523141487, [1, 990287, 938453, 442469, 582971, 543793, 451937, 740387, 598369, 447779, 404051, 755483, 305237, 649613, 692963])]), (15, [(50613163876368028622346530009826037996815640761023841734604541027298308460370409668881, [1, 264577, 599491, 274333, 736093, 617509, 367687, 867059, 319691, 431657, 911681, 554467, 285983, 932447, 979889, 440371])]), (16, [(769090858865206061885880943980768284153859628164888997420356675436472539144028784070095095237, [1, 950867, 861881, 457393, 980299, 631429, 495269, 915769, 508213, 647117, 522449, 628651, 423601, 424573, 727009, 818353, 632323])]), (17, [(196977310312658568781845588508404477938880293733466141826022922484510815211575375896641412042353549, [1, 758201, 321751, 637319, 599023, 343073, 887599, 761561, 792151, 494563, 949159, 650873, 683567, 269923, 375029, 993283, 585413, 936521])]), (18, [(129141799273878189564512192295639292672003822527500741294809435142826627398649170558132600661043197731207, [1, 426061, 784129, 997207, 626191, 624067, 465989, 713509, 630559, 759959, 863959, 348419, 592337, 700811, 929749, 378361, 472391, 993943, 301643])]), (19, [(69075078451080447348652398148170166018559052724926071398371619470677958611203357681068967055440034493277516549, [1, 562103, 571933, 373517, 263561, 399983, 489329, 829729, 926089, 952097, 786419, 949607, 531203, 976453, 657451, 314747, 622049, 949471, 503653, 639269])]), (20, [(12261114761192479490433494751881572357457339218212150693678819404160852856433791413547177329691720094826335069005931, [1, 670693, 447749, 405863, 752683, 570029, 584203, 344611, 929171, 432979, 890161, 895087, 261017, 943387, 602821, 260413, 444517, 682483, 774901, 754421, 529961])])])\n"}︡{"done":true}︡
︠0b41be99-9c82-42de-a2f3-55b659f7354ai︠
%md
## Largest primes ($2^{50} \leq p \leq 2^{100}$)
Results in composite primes of approximately 151-226 bits.
Only 2-3 factors.
︡122e0199-9f27-442b-bce7-2e86fc87f5fc︡{"done":true,"md":"## Largest primes ($2^{50} \\leq p \\leq 2^{100}$)\nResults in composite primes of approximately 151-226 bits.\nOnly 2-3 factors."}
︠dcb2c6ae-ab13-450c-a61e-694a8a673607oi︠
suite, latex = generateSuiteFromBounds(description="Largest primes", lowerLimit = 2**50, upperLimit = 2**100, numberOfFactors = range(2, 3 +1))

suite
︡ac8d8a25-47b9-4e36-9c95-82572bec03ba︡{"stdout":"[(2, [(111249403654736134582644043055205523351685257487143327405169, [1, 300195356002465008465134130139, 370590022231465256380412612771])]), (3, [(2552338888451940939878385346319773221068525801095748384018351713477699599279656524535279, [1, 692816326336520620971073172219, 14596970082403445285974883761, 252381493693444614323009259181])])]\n"}︡{"done":true}︡
︠84e9d1ec-b70f-4d9d-97da-1ab93bd3b035i︠
%md
## Close primes - small factors
︡1eb854fd-b900-4bfc-ac14-b855a3089354︡{"done":true,"md":"## Close primes - small factors"}
︠e30fd684-e108-401d-9ea5-bacbbee766f3i︠
suite, latex = generateSuiteFromProximity(description="Small close factors", startValues = [13, 31])

suite
︡e4013a2e-7ae4-4afe-b149-ab013c27df0f︡{"stdout":"('Small close factors', [(2, [(187, [1, 11, 17]), (221, [1, 13, 17])]), (3, [(1463, [1, 11, 19, 7]), (1183, [1, 13, 13, 7])]), (4, [(23023, [1, 11, 23, 7, 13]), (18515, [1, 5, 23, 7, 23])]), (5, [(161733, [1, 11, 13, 13, 29, 3]), (252655, [1, 5, 23, 13, 13, 13])]), (6, [(1154725, [1, 5, 13, 5, 17, 11, 19]), (955695, [1, 5, 29, 13, 13, 3, 13])]), (7, [(7743087, [1, 3, 31, 11, 29, 3, 29, 3]), (40602639, [1, 11, 29, 11, 19, 7, 29, 3])]), (8, [(107279613, [1, 3, 23, 3, 23, 7, 37, 3, 29]), (283487325, [1, 3, 17, 11, 41, 5, 17, 5, 29])]), (9, [(935717625, [1, 5, 43, 5, 29, 3, 23, 3, 29, 5]), (878332455, [1, 7, 17, 5, 31, 11, 13, 3, 37, 3])]), (10, [(24451456575, [1, 3, 17, 7, 13, 5, 43, 13, 29, 5, 13]), (1748802168425, [1, 13, 41, 5, 47, 13, 41, 5, 31, 13, 13])]), (11, [(6148592793, [1, 3, 19, 3, 31, 3, 19, 7, 19, 3, 17, 3]), (433954018575, [1, 3, 29, 5, 23, 11, 47, 5, 47, 7, 17, 3])]), (12, [(2336441234985, [1, 13, 37, 5, 19, 11, 13, 3, 41, 3, 19, 3, 17]), (6169110180975, [1, 3, 41, 3, 29, 7, 31, 5, 19, 7, 47, 5, 17])]), (13, [(19600594410375, [1, 5, 29, 3, 37, 11, 29, 5, 19, 3, 47, 5, 19, 3]), (27464992644375, [1, 3, 13, 11, 47, 5, 13, 5, 29, 3, 47, 5, 41, 5])]), (14, [(979848317369025, [1, 5, 23, 3, 59, 5, 17, 13, 59, 3, 23, 3, 29, 3, 41]), (16313742837926625, [1, 5, 23, 13, 61, 5, 53, 3, 31, 5, 43, 7, 53, 7, 13])]), (15, [(276612138433767825, [1, 3, 41, 13, 67, 3, 67, 5, 41, 3, 53, 13, 43, 5, 47, 3]), (480388899282435, [1, 11, 29, 3, 29, 3, 31, 5, 13, 3, 29, 3, 23, 3, 53, 3])]), (16, [(13042072935932625, [1, 3, 31, 5, 23, 3, 31, 3, 19, 3, 31, 3, 13, 5, 43, 5, 59]), (382555146521019375, [1, 3, 29, 5, 61, 3, 71, 3, 23, 5, 61, 5, 19, 3, 37, 5, 61])]), (17, [(3312499880682759375, [1, 5, 19, 3, 47, 5, 47, 5, 29, 7, 79, 3, 73, 3, 47, 5, 17, 5]), (1706485929231344625, [1, 13, 67, 5, 43, 5, 53, 3, 19, 3, 47, 3, 17, 3, 17, 7, 47, 5])]), (18, [(1174450948827771103125, [1, 5, 31, 3, 23, 5, 13, 5, 23, 7, 79, 5, 59, 5, 19, 13, 71, 13, 79]), (201675564824001357375, [1, 5, 31, 13, 19, 3, 67, 5, 37, 5, 61, 3, 23, 3, 71, 13, 13, 11, 17])]), (19, [(2896784440836584878125, [1, 5, 73, 5, 67, 5, 53, 5, 23, 13, 41, 7, 73, 5, 17, 3, 41, 7, 13, 3]), (1890142883084170567125, [1, 3, 67, 3, 13, 5, 29, 3, 79, 3, 47, 3, 79, 13, 61, 7, 17, 5, 89, 5])]), (20, [(65022163146983219653125, [1, 5, 43, 5, 59, 3, 61, 3, 97, 5, 59, 13, 31, 3, 83, 3, 29, 5, 23, 5, 13]), (32369441131223583393825, [1, 5, 29, 3, 97, 13, 19, 3, 41, 3, 71, 3, 53, 3, 37, 7, 17, 3, 53, 5, 71])]), (2, [(961, [1, 31, 31]), (1147, [1, 31, 37])]), (3, [(33263, [1, 29, 37, 31]), (27869, [1, 31, 31, 29])]), (4, [(494209, [1, 19, 37, 19, 37]), (847757, [1, 29, 41, 23, 31])]), (5, [(14253769, [1, 17, 43, 17, 37, 31]), (21859867, [1, 31, 31, 23, 43, 23])]), (6, [(272897651, [1, 13, 47, 17, 47, 13, 43]), (424808137, [1, 19, 43, 13, 37, 23, 47])]), (7, [(7642399589, [1, 11, 43, 23, 43, 17, 31, 31]), (8418710641, [1, 31, 47, 11, 53, 11, 53, 17])]), (8, [(705261876527, [1, 19, 47, 13, 61, 23, 43, 19, 53]), (343508150821, [1, 19, 43, 11, 61, 29, 41, 17, 31])]), (9, [(5001316620355, [1, 5, 61, 17, 53, 11, 53, 31, 53, 19]), (298235183875, [1, 5, 59, 19, 41, 5, 37, 5, 61, 23])]), (10, [(10840457019117, [1, 11, 37, 3, 31, 11, 37, 17, 53, 11, 71]), (32246166582465, [1, 11, 67, 3, 41, 5, 53, 19, 43, 31, 53])]), (11, [(131104352392575, [1, 17, 47, 29, 73, 17, 53, 3, 31, 5, 37, 5]), (318821990728325, [1, 31, 53, 19, 37, 5, 31, 5, 41, 7, 73, 17])]), (12, [(8917467228811725, [1, 29, 41, 5, 79, 3, 41, 23, 31, 5, 43, 19, 53]), (2047407165326187, [1, 23, 31, 7, 53, 3, 41, 19, 71, 3, 71, 3, 73])]), (13, [(6224134475718818659, [1, 13, 47, 11, 71, 23, 83, 23, 37, 17, 67, 19, 53, 7]), (51245303801837145, [1, 17, 53, 7, 83, 7, 73, 11, 43, 13, 31, 5, 67, 3])]), (14, [(108043090363342428225, [1, 5, 73, 29, 59, 19, 71, 31, 61, 3, 83, 5, 47, 19, 61]), (3926065196602313399917, [1, 17, 47, 23, 83, 19, 61, 23, 31, 17, 71, 29, 53, 23, 73])]), (15, [(22027411283540928125, [1, 23, 83, 5, 31, 23, 47, 5, 89, 5, 71, 7, 47, 5, 53, 5]), (177118086912132284625, [1, 3, 59, 7, 89, 23, 89, 5, 71, 29, 53, 23, 61, 5, 41, 5])]), (16, [(23707258426609810843125, [1, 5, 101, 23, 83, 17, 89, 5, 67, 5, 71, 29, 97, 5, 79, 3, 41]), (2031893035845148045125, [1, 3, 47, 3, 41, 5, 73, 5, 67, 23, 71, 19, 73, 19, 73, 5, 61])]), (17, [(36236921442400155709375, [1, 5, 71, 5, 101, 19, 67, 5, 41, 23, 43, 11, 79, 13, 47, 5, 59, 5]), (95484403968664676886375, [1, 31, 31, 5, 89, 3, 47, 5, 83, 13, 67, 29, 53, 5, 37, 31, 71, 7])]), (18, [(68449749435915415117875, [1, 13, 101, 23, 59, 3, 43, 5, 41, 3, 31, 13, 43, 3, 67, 5, 83, 5, 67]), (19589478089411820609060525, [1, 5, 107, 3, 97, 23, 47, 29, 31, 5, 89, 19, 103, 3, 31, 17, 83, 11, 103])]), (19, [(17459425383139545183002625, [1, 5, 53, 3, 61, 5, 101, 13, 73, 19, 59, 7, 103, 11, 101, 5, 41, 11, 53, 7]), (253868269728472313813110875, [1, 5, 59, 3, 67, 5, 67, 29, 41, 13, 109, 19, 47, 13, 73, 31, 43, 5, 79, 17])]), (20, [(10019176560312034400567595, [1, 3, 47, 3, 83, 5, 47, 19, 103, 29, 41, 3, 31, 3, 61, 3, 43, 3, 79, 17, 59]), (215947535722966231822673332275, [1, 5, 109, 17, 43, 23, 47, 23, 79, 11, 83, 17, 113, 17, 61, 17, 83, 3, 107, 5, 67])])])"}︡{"stdout":"\n"}︡{"done":true}︡
︠0142e47c-bd83-4f92-b052-d4cbb4125e05i︠
%md
## Close primes - medium factors
︡4a2dc258-620c-479b-8174-e2d32eff3ec8︡{"done":true,"md":"## Close primes - medium factors"}
︠c4445daf-70ce-47fc-a774-20b2aa7de9d9i︠
suite, latex = generateSuiteFromProximity(startValues = [563, 1069])

suite
︡885e07ef-476a-42cd-8c11-e70ecc28ff05︡{"stdout":"[(2, [(316933, [1, 557, 569]), (313591, [1, 557, 563])]), (3, [(171534277, [1, 557, 563, 547]), (173971709, [1, 557, 571, 547])]), (4, [(94758693241, [1, 541, 569, 541, 569]), (100381676093, [1, 557, 571, 547, 577])]), (5, [(56670957560149, [1, 563, 587, 563, 563, 541]), (55737645509339, [1, 563, 563, 547, 571, 563])]), (6, [(33960079475671199, [1, 557, 563, 547, 593, 563, 593]), (28590087506703829, [1, 541, 593, 521, 569, 521, 577])]), (7, [(16668687877305357367, [1, 547, 593, 547, 593, 547, 569, 509]), (14895421562352162947, [1, 523, 563, 523, 587, 541, 563, 541])]), (8, [(8825598186724532340139, [1, 503, 577, 563, 601, 503, 593, 503, 599]), (8056030357210311798593, [1, 509, 571, 541, 563, 509, 587, 541, 563])]), (9, [(5176371113800439756757811, [1, 523, 569, 503, 593, 547, 587, 547, 607, 547]), (4307414133054528902898431, [1, 547, 577, 503, 569, 547, 569, 503, 563, 541])]), (10, [(2472832340955827717218826729, [1, 499, 571, 541, 599, 491, 577, 563, 569, 491, 601]), (2584284171184513506455410453, [1, 503, 613, 509, 599, 563, 569, 499, 607, 491, 577])]), (11, [(1910856948409986584271742351543, [1, 521, 577, 547, 563, 563, 577, 541, 617, 563, 607, 557]), (1332882535090650712169308963739, [1, 487, 613, 547, 613, 503, 563, 487, 617, 557, 563, 499])]), (12, [(852196735493924940848986241767987, [1, 541, 613, 487, 617, 491, 587, 523, 613, 523, 563, 523, 601]), (752546528211330815497003845481997, [1, 479, 593, 503, 587, 491, 587, 503, 607, 541, 587, 547, 587])]), (13, [(413424284293138931542565906706071669, [1, 491, 587, 487, 617, 541, 607, 487, 587, 557, 617, 479, 571, 541]), (422612439674921629650938136476012611, [1, 523, 569, 541, 577, 541, 571, 523, 613, 487, 569, 563, 563, 523])]), (14, [(457153207646831573744181522153370927673, [1, 547, 619, 547, 641, 563, 607, 547, 593, 563, 631, 509, 619, 503, 617]), (259918970541028265619885810519171604529, [1, 557, 631, 541, 593, 487, 563, 503, 619, 503, 617, 467, 631, 503, 587])]), (15, [(109868336528703352227207124944087831704269, [1, 463, 599, 509, 631, 467, 617, 487, 643, 563, 563, 487, 607, 541, 563, 479]), (142219206797328060675174570040656920579167, [1, 479, 613, 547, 587, 557, 601, 479, 587, 499, 571, 479, 643, 563, 593, 547])]), (16, [(76820202531067992349805610678707511043871803, [1, 547, 587, 509, 569, 491, 613, 491, 607, 547, 601, 487, 643, 487, 617, 463, 643]), (84353082637098915851350715686631411152617919, [1, 499, 593, 541, 613, 523, 601, 557, 593, 491, 587, 521, 587, 491, 599, 521, 613])]), (17, [(29867711038615093175665393861938141536525529539, [1, 541, 607, 479, 577, 557, 599, 467, 647, 463, 577, 461, 607, 499, 617, 457, 617, 503]), (32160416498806182862863819430142025959220975101, [1, 449, 613, 509, 631, 461, 613, 499, 601, 541, 599, 461, 617, 487, 631, 503, 599, 503])]), (18, [(19956848495929281188644811212469947126676084328359, [1, 449, 601, 563, 659, 467, 587, 461, 577, 509, 659, 467, 577, 479, 641, 499, 653, 503, 601]), (21117036798239547259422495410311750799350659014713, [1, 487, 593, 541, 571, 449, 601, 487, 643, 521, 617, 463, 619, 457, 659, 503, 563, 541, 659])]), (19, [(13264396535897727373516274848984084788966136163607509, [1, 503, 613, 461, 659, 461, 659, 563, 569, 461, 647, 521, 653, 523, 607, 449, 631, 541, 631, 467]), (12747441328106451238259995492136682019426946134615741, [1, 461, 593, 503, 619, 479, 653, 521, 659, 563, 641, 541, 617, 457, 571, 499, 607, 439, 599, 557])]), (20, [(5156986434929461169796816182749562003267982133556328449, [1, 463, 571, 439, 661, 433, 607, 457, 617, 509, 641, 467, 659, 457, 661, 557, 661, 499, 619, 439, 599]), (4889610655414411472658135732868818020771788946718976949, [1, 503, 673, 487, 569, 479, 617, 491, 653, 457, 613, 461, 563, 479, 673, 509, 569, 433, 571, 487, 673])]), (2, [(1142761, [1, 1069, 1069]), (1136347, [1, 1063, 1069])]), (3, [(1228276303, [1, 1063, 1087, 1063]), (1235209189, [1, 1063, 1087, 1069])]), (4, [(1334677393237, [1, 1063, 1093, 1051, 1093]), (1332235165619, [1, 1063, 1091, 1051, 1093])]), (5, [(1402629106625399, [1, 1063, 1091, 1049, 1097, 1051]), (1418937909399427, [1, 1069, 1093, 1051, 1087, 1063])]), (6, [(1597798805102350891, [1, 1069, 1093, 1063, 1097, 1069, 1097]), (1520005874460943489, [1, 1069, 1069, 1061, 1087, 1061, 1087])]), (7, [(1603168127794699290541, [1, 1063, 1103, 1051, 1109, 1033, 1093, 1039]), (1612842382725010293011, [1, 1033, 1097, 1069, 1091, 1049, 1109, 1049])]), (8, [(1718598263073818570384887, [1, 1031, 1097, 1069, 1091, 1063, 1093, 1049, 1069]), (1757529589061923699888087, [1, 1049, 1097, 1063, 1087, 1039, 1093, 1061, 1097])]), (9, [(1824913317720944628804183853, [1, 1051, 1109, 1033, 1097, 1063, 1091, 1051, 1091, 1039]), (1766115859678499030090922409, [1, 1061, 1091, 1063, 1069, 1033, 1091, 1039, 1091, 1051])]), (10, [(2044146205511432560530644353003, [1, 1061, 1123, 1019, 1093, 1069, 1087, 1039, 1109, 1019, 1129]), (2023343565385497662573424982849, [1, 1049, 1069, 1049, 1129, 1051, 1117, 1039, 1093, 1069, 1069])]), (11, [(2138146560514888959638653203727999, [1, 1033, 1093, 1033, 1117, 1049, 1093, 1061, 1129, 1069, 1097, 1019]), (2047088725942481982714204169717471, [1, 1061, 1123, 1031, 1123, 1019, 1069, 1051, 1069, 1061, 1069, 1069])]), (12, [(2353583186144653289501714282050393409, [1, 1049, 1087, 1021, 1153, 1049, 1103, 1051, 1093, 1051, 1091, 1019, 1129]), (2275159985769061830987258016478931859, [1, 1063, 1097, 1031, 1103, 1063, 1103, 1021, 1091, 1051, 1109, 1009, 1117])]), (13, [(2492097436003839540838892538978283235653, [1, 1039, 1103, 1039, 1117, 1039, 1123, 1051, 1093, 1019, 1069, 1069, 1123, 1069]), (2083445330217309788943292916425765482277, [1, 1039, 1091, 1013, 1123, 1031, 1097, 1033, 1093, 1019, 1123, 1021, 1069, 1013])]), (14, [(3026567709449547952359333008027322113358461, [1, 1061, 1117, 1033, 1109, 1061, 1153, 1013, 1117, 1051, 1087, 1013, 1153, 1069, 1129]), (2882599589709110224249733588127180959062163, [1, 1013, 1097, 1033, 1109, 1063, 1123, 1063, 1087, 1063, 1151, 1061, 1109, 1049, 1087])]), (15, [(2784085616184428897659292570343329087575063793, [1, 1039, 1163, 997, 1087, 1009, 1109, 1009, 1151, 997, 1093, 1031, 1181, 1039, 1151, 1031]), (2623289042257046506415381707180861391182863277, [1, 991, 1091, 997, 1129, 1069, 1163, 1049, 1093, 1021, 1093, 1019, 1091, 1051, 1091, 1063])]), (16, [(3309498666165362973713994449803606500505059524969, [1, 1051, 1103, 1049, 1151, 1021, 1129, 1063, 1109, 1063, 1103, 1009, 1151, 983, 1091, 1061, 1123]), (3007559565989492190685682333633142659992222889983, [1, 991, 1153, 1013, 1103, 1069, 1109, 1039, 1151, 983, 1153, 1051, 1123, 983, 1109, 1033, 1103])]), (17, [(3337430374387820187766404846559737967472421425519377, [1, 1061, 1193, 1009, 1171, 1069, 1097, 971, 1093, 1061, 1091, 1019, 1187, 1033, 1109, 983, 1103, 1031]), (3009463694645099549214603933901886663401681206188531, [1, 1031, 1091, 1039, 1163, 1019, 1151, 1061, 1129, 1069, 1123, 1013, 1069, 977, 1109, 1019, 1117, 983])]), (18, [(3205474017206716910525999363197509384671530933913244179, [1, 1069, 1093, 991, 1163, 991, 1103, 971, 1087, 1061, 1069, 1039, 1087, 1063, 1091, 1019, 1087, 1051, 1193]), (3838143684519378674624606833998765033603759339155011169, [1, 1049, 1097, 991, 1193, 1021, 1151, 1069, 1093, 1021, 1181, 977, 1103, 1069, 1093, 1061, 1201, 977, 1087])]), (19, [(3630505250586537380826457274577452415857434807088548791649, [1, 1021, 1109, 1009, 1153, 967, 1163, 1009, 1123, 953, 1201, 1021, 1093, 997, 1171, 1033, 1109, 1019, 1171, 1061]), (3328634472598003887835597528525093350883513224862826212061, [1, 971, 1091, 1039, 1201, 1031, 1213, 1061, 1153, 997, 1103, 953, 1153, 977, 1091, 997, 1097, 1039, 1151, 977])]), (20, [(3055878534232886887533008275157224451264024556815840381056001, [1, 977, 1117, 977, 1117, 983, 1187, 971, 1093, 971, 1087, 1069, 1109, 953, 1097, 1051, 1093, 1069, 1193, 991, 1091]), (4003992205233808349893596129588063075763059241015453817988877, [1, 1033, 1069, 1031, 1163, 997, 1187, 953, 1087, 1039, 1129, 1049, 1069, 1031, 1213, 1013, 1109, 1039, 1181, 997, 1091])])]"}︡{"stdout":"\n"}︡{"done":true}︡
︠13dc8a2f-357f-43a3-b985-4430005f7035i︠
%md
## Close primes - large factors
︡458b5437-a8e4-4c28-af65-66fc0cd9abce︡{"done":true,"md":"## Close primes - large factors"}
︠1f5aab1e-b869-48ba-992b-18abdfe9e95bi︠
suite, latex = generateSuiteFromProximity(startValues = [29423, 40277])

suite
︡93a92df7-6910-402e-8f37-123660d85390︡{"stdout":"[(2, [(865712929, [1, 29423, 29423]), (865712929, [1, 29423, 29423])]), (3, [(25454551017407, [1, 29411, 29437, 29401]), (25454551017407, [1, 29401, 29437, 29411])]), (4, [(748949254585166161, [1, 29411, 29437, 29401, 29423]), (749815315379647091, [1, 29423, 29429, 29411, 29443])]), (5, [(22042301982094473596467, [1, 29389, 29437, 29401, 29453, 29423]), (22037819908204262231501, [1, 29411, 29453, 29399, 29423, 29411])]), (6, [(647625188777536523967038123, [1, 29389, 29437, 29387, 29429, 29399, 29443]), (648727214546027169234119857, [1, 29411, 29443, 29401, 29443, 29399, 29437])]), (7, [(19047305219120345130931560910901, [1, 29401, 29437, 29399, 29437, 29401, 29437, 29383]), (19122506962371043582760416155121, [1, 29423, 29473, 29399, 29483, 29399, 29423, 29411])]), (8, [(562143099156355627345058252853193301, [1, 29423, 29443, 29363, 29483, 29411, 29429, 29383, 29473]), (562829942618851054761838008402259709, [1, 29363, 29483, 29401, 29501, 29401, 29443, 29399, 29453])]), (9, [(16549917550139176331089539530499288572021, [1, 29389, 29437, 29423, 29501, 29347, 29443, 29383, 29527, 29399]), (16494942489066181415143190513104903497931, [1, 29387, 29443, 29387, 29501, 29383, 29473, 29347, 29443, 29387])]), (10, [(483818446645921223916066574454799803265926869, [1, 29399, 29443, 29383, 29423, 29411, 29423, 29347, 29443, 29387, 29423]), (490367376997778494257114997680532736329945909, [1, 29387, 29483, 29401, 29501, 29423, 29531, 29389, 29501, 29389, 29473])]), (11, [(14298066897873419916925610084596585019684404299577, [1, 29363, 29437, 29339, 29443, 29333, 29531, 29411, 29537, 29347, 29483, 29411]), (14320484452966964226830269428065419115967575823307, [1, 29399, 29527, 29389, 29537, 29399, 29501, 29383, 29423, 29347, 29443, 29333])]), (12, [(422988549701602021708072490756282881304545627458255859, [1, 29363, 29453, 29401, 29453, 29389, 29567, 29423, 29531, 29363, 29429, 29423, 29423]), (423761271786225112222217862150288564714519017380395689, [1, 29411, 29537, 29401, 29483, 29383, 29537, 29339, 29473, 29411, 29527, 29333, 29437])]), (13, [(12293239381581520625704123339024990495993226167931711051791, [1, 29363, 29443, 29347, 29537, 29401, 29423, 29347, 29531, 29311, 29423, 29311, 29443, 29399]), (12451198379061059764624491385115885732898863931874087138687, [1, 29363, 29569, 29347, 29429, 29339, 29567, 29423, 29483, 29363, 29527, 29423, 29483, 29339])]), (14, [(366249931054054855918254086215217231707917666117006778977380909, [1, 29347, 29569, 29423, 29443, 29333, 29527, 29387, 29567, 29399, 29429, 29327, 29527, 29339, 29453]), (367896370789011152412608731303715436991394396657947014758999489, [1, 29303, 29501, 29399, 29537, 29387, 29567, 29389, 29473, 29311, 29527, 29399, 29483, 29399, 29527])]), (15, [(10644894953985381764687625074094294366413635557060109122838940666171, [1, 29297, 29443, 29333, 29453, 29311, 29527, 29311, 29527, 29387, 29527, 29303, 29567, 29383, 29453, 29311]), (10685620363611581349723712362560065711947054666446884334157352103099, [1, 29399, 29453, 29399, 29531, 29399, 29443, 29311, 29453, 29297, 29531, 29297, 29573, 29389, 29473, 29297])]), (16, [(318513253747377908211654512553364042173627257881988069391587768229583691, [1, 29423, 29501, 29423, 29537, 29401, 29573, 29399, 29501, 29311, 29429, 29363, 29483, 29303, 29423, 29411, 29569]), (318010433938975531069970467031819358831170737214531625647265186479508697, [1, 29347, 29573, 29327, 29423, 29333, 29501, 29327, 29443, 29387, 29581, 29423, 29573, 29399, 29537, 29347, 29483])]), (17, [(9274924513456323558811589191670119099925691334742148666185537727889128732529, [1, 29423, 29599, 29269, 29531, 29339, 29483, 29333, 29443, 29333, 29537, 29387, 29443, 29399, 29453, 29311, 29599, 29287]), (9306534270861220085725248728885553486460012328605762858906957840590239358497, [1, 29389, 29567, 29363, 29423, 29269, 29483, 29423, 29437, 29363, 29567, 29333, 29581, 29399, 29527, 29339, 29537, 29269])]), (18, [(273447555319424943187398893784654666306360710336455357136751751809036563020145951, [1, 29389, 29473, 29387, 29501, 29327, 29611, 29327, 29537, 29339, 29537, 29251, 29423, 29423, 29473, 29251, 29527, 29303, 29573]), (273777364729800462429940443288730515555346668606062214085557317040304257088157639, [1, 29423, 29429, 29287, 29611, 29311, 29531, 29347, 29581, 29303, 29429, 29333, 29531, 29287, 29501, 29327, 29587, 29303, 29567])]), (19, [(8092813032034752870137381401915653543865243380513951917556601612686501897877155480529, [1, 29383, 29611, 29389, 29581, 29287, 29531, 29401, 29501, 29297, 29453, 29327, 29611, 29411, 29453, 29383, 29453, 29387, 29537, 29251]), (8101465846655008560733288209269117691483784364549949754676618472732876797621084547241, [1, 29399, 29573, 29339, 29567, 29251, 29423, 29347, 29443, 29389, 29573, 29333, 29567, 29347, 29573, 29327, 29501, 29401, 29629, 29297])]), (20, [(234378162774272083465819585268149691307105050863628353375341774554968068447199162285443833, [1, 29287, 29483, 29251, 29453, 29389, 29483, 29339, 29501, 29333, 29537, 29269, 29437, 29339, 29501, 29297, 29453, 29401, 29537, 29383, 29531]), (234135764547596304524147681265747540452786682840147054666671262723031988066482413301913669, [1, 29339, 29531, 29297, 29567, 29231, 29567, 29297, 29423, 29339, 29443, 29231, 29587, 29311, 29567, 29311, 29599, 29399, 29453, 29231, 29453])]), (2, [(1621270081, [1, 40253, 40277]), (1621270081, [1, 40253, 40277])]), (3, [(65260984570493, [1, 40253, 40277, 40253]), (65241529329521, [1, 40253, 40277, 40241])]), (4, [(2628907540960158751, [1, 40253, 40283, 40241, 40289]), (2628515975157071569, [1, 40241, 40289, 40253, 40277])]), (5, [(105663786523994505249787, [1, 40237, 40283, 40231, 40277, 40231]), (105747846551901297102991, [1, 40253, 40277, 40241, 40283, 40237])]), (6, [(4276777994168845795685084369, [1, 40213, 40357, 40253, 40357, 40277, 40277]), (4261730664682637298515573083, [1, 40237, 40277, 40231, 40277, 40213, 40357])]), (7, [(171675339450528779010130577717441, [1, 40231, 40351, 40237, 40289, 40277, 40277, 40213]), (171725964673339015282431048008621, [1, 40237, 40343, 40213, 40361, 40231, 40289, 40213])]), (8, [(6940328532425640161878617107022831931, [1, 40241, 40387, 40277, 40351, 40213, 40277, 40213, 40343]), (6937928030201461327568435740563312701, [1, 40213, 40357, 40241, 40361, 40253, 40343, 40231, 40289])]), (9, [(278783934216210794061753445528460285077843, [1, 40237, 40283, 40177, 40423, 40237, 40289, 40213, 40423, 40189]), (280201693317557732699734499983537650751331, [1, 40277, 40361, 40277, 40423, 40213, 40361, 40237, 40289, 40237])]), (10, [(11266035858555712572848498785608957810155199769, [1, 40277, 40361, 40241, 40277, 40169, 40427, 40231, 40343, 40213, 40343]), (11248748165423422014156975262092465859284398131, [1, 40277, 40361, 40193, 40289, 40189, 40343, 40213, 40361, 40237, 40357])]), (11, [(452365647933365700184455164174376023053860917287901, [1, 40177, 40387, 40277, 40283, 40189, 40357, 40231, 40343, 40163, 40387, 40241]), (449701911482155772128565847368365973030290463048771, [1, 40189, 40351, 40253, 40289, 40189, 40283, 40193, 40343, 40193, 40351, 40163])]), (12, [(18313458677768241029361126067868713086248286672636815087, [1, 40237, 40429, 40277, 40357, 40241, 40351, 40253, 40283, 40231, 40289, 40213, 40357]), (18250572437229924758295006051459000197191942489816056329, [1, 40213, 40361, 40231, 40283, 40231, 40361, 40177, 40277, 40153, 40433, 40237, 40423])]), (13, [(738365424372328155516200875596859028033712185143813239636697, [1, 40241, 40427, 40189, 40343, 40253, 40427, 40237, 40357, 40189, 40433, 40213, 40351, 40177]), (735286352707701561586078679475095075815643479401450265856257, [1, 40153, 40459, 40241, 40459, 40193, 40289, 40237, 40289, 40153, 40387, 40169, 40387, 40253])]), (14, [(29373297580035069399879971437182275084191326425505542159180637071, [1, 40213, 40289, 40129, 40283, 40129, 40387, 40241, 40361, 40153, 40429, 40129, 40277, 40169, 40427]), (29909068422978136679310036940712188458368142913407434306408958727, [1, 40177, 40433, 40189, 40429, 40193, 40423, 40277, 40429, 40241, 40343, 40237, 40427, 40189, 40357])]), (15, [(1190308734806001452624428419210166831878447638583765709998701699322677, [1, 40163, 40471, 40153, 40429, 40241, 40283, 40277, 40289, 40151, 40459, 40241, 40343, 40127, 40343, 40169]), (1191197716982639111892135143689621152800042059925150289986504827047163, [1, 40189, 40289, 40129, 40283, 40241, 40289, 40213, 40427, 40151, 40483, 40277, 40459, 40129, 40357, 40253])]), (16, [(48142145059544319190375895840285035420345008460652389028989842839589161101, [1, 40151, 40283, 40213, 40423, 40277, 40423, 40241, 40459, 40169, 40433, 40151, 40343, 40163, 40427, 40151, 40277]), (48304323928051683956152914371144110851492525150491340507493386931312814789, [1, 40241, 40433, 40123, 40459, 40153, 40283, 40241, 40429, 40151, 40483, 40169, 40357, 40193, 40429, 40189, 40387])]), (17, [(1947163081288901745447679864902656801561849466655905426788125701187223499442883, [1, 40253, 40483, 40127, 40387, 40111, 40277, 40213, 40493, 40129, 40433, 40253, 40459, 40277, 40487, 40231, 40289, 40129]), (1950193563503571247994675503760211420163920048052169513812618570297657545722893, [1, 40231, 40427, 40111, 40427, 40127, 40487, 40231, 40459, 40237, 40351, 40129, 40427, 40231, 40277, 40277, 40423, 40241])]), (18, [(78936951915049847226243400827108784756556544200163394380642260866249453916058775541, [1, 40253, 40471, 40099, 40343, 40129, 40433, 40231, 40471, 40237, 40361, 40213, 40471, 40213, 40471, 40237, 40351, 40099, 40487]), (78951094094132040233040058707045915482428704964122655414198932241792706059352696417, [1, 40123, 40429, 40127, 40423, 40153, 40483, 40151, 40427, 40193, 40487, 40189, 40357, 40123, 40471, 40231, 40499, 40253, 40459])]), (19, [(3128927636109278291345269400034681971656783052672880042429271967052894323478553387411493, [1, 40123, 40471, 40253, 40277, 40111, 40289, 40177, 40387, 40093, 40283, 40177, 40429, 40193, 40387, 40231, 40471, 40099, 40499, 40253]), (3146520128824371716207725209907584052952049742107680993674409723280717068075495166986423, [1, 40213, 40289, 40189, 40483, 40127, 40277, 40163, 40429, 40163, 40487, 40193, 40433, 40129, 40289, 40277, 40483, 40093, 40459, 40253])]), (20, [(128852600609349526097437512679089470899860629063921966904451544951666329006154974515208595849, [1, 40099, 40471, 40241, 40357, 40237, 40361, 40277, 40423, 40087, 40519, 40241, 40429, 40087, 40499, 40169, 40499, 40189, 40507, 40213, 40471]), (126062316213731487422916572994986948260691672311530813690188127109530700932036759345668642767, [1, 40189, 40433, 40277, 40343, 40153, 40387, 40169, 40357, 40093, 40499, 40127, 40387, 40087, 40499, 40087, 40493, 40111, 40283, 40087, 40433])])]"}︡{"stdout":"\n"}︡{"done":true}︡
︠9892a06b-60b2-4304-be9f-d5d0283e1f6di︠
%md
### Growing primes (from 1-2 bits to 60-61 bits)
︡46866382-2e99-4e88-ae97-9b332a1272e3︡{"done":true,"md":"### Growing primes (from 1-2 bits to 60-61 bits)"}
︠80acd56e-af03-411a-8c6c-51a5c6cde4cfsi︠

suite, latex = generateGrowingSuiteFromBits("Growing primes")

suite
︡97f97438-aded-4024-a24a-91320f8ea647︡{"stdout":"('Growing primes', [(1, [(9, [1, 3, 3])]), (2, [(35, [1, 7, 5])]), (3, [(121, [1, 11, 11])]), (4, [(713, [1, 31, 23])]), (5, [(2021, [1, 47, 43])]), (6, [(9701, [1, 109, 89])]), (7, [(44197, [1, 229, 193])]), (8, [(227333, [1, 491, 463])]), (9, [(375733, [1, 607, 619])]), (10, [(1890353, [1, 1453, 1301])]), (11, [(9636661, [1, 2857, 3373])]), (12, [(34607941, [1, 4289, 8069])]), (13, [(141526681, [1, 9931, 14251])]), (14, [(433069319, [1, 25841, 16759])]), (15, [(2972787073, [1, 59053, 50341])]), (16, [(14133478171, [1, 108179, 130649])]), (17, [(26292433151, [1, 175039, 150209])]), (18, [(125543669221, [1, 299891, 418631])]), (19, [(570913444091, [1, 749863, 761357])]), (20, [(2348286626281, [1, 1354181, 1734101])]), (21, [(10600378275079, [1, 3085063, 3436033])]), (22, [(58727878952221, [1, 7035253, 8347657])]), (23, [(265861840149439, [1, 16038317, 16576667])]), (24, [(555580163039887, [1, 27202933, 20423539])]), (25, [(2006032450017437, [1, 33701179, 59524103])]), (26, [(13956089649334817, [1, 104009813, 134180509])]), (27, [(41892199529318651, [1, 169091821, 247748231])]), (28, [(274956958669230259, [1, 512411233, 536594323])]), (29, [(658932415844729413, [1, 703717379, 936359447])]), (30, [(2556628531232551883, [1, 1260537829, 2028204527])]), (31, [(10904097845024001131, [1, 3657575479, 2981236589])]), (32, [(40253271129726552479, [1, 8553878863, 4705850033])]), (33, [(185934331863460802143, [1, 11653119493, 15955756051])]), (34, [(935588118237699539777, [1, 28754395639, 32537220743])]), (35, [(3235267609157780512073, [1, 63044255653, 51317405141])]), (36, [(6403705525966772473171, [1, 92707938151, 69073972021])]), (37, [(44695688343213565717889, [1, 192641166721, 232015249409])]), (38, [(237409666770495119913553, [1, 504995271551, 470122553903])]), (39, [(620630872450120196372443, [1, 696639343919, 890892651797])]), (40, [(3187001288361171599452829, [1, 1557849527587, 2045769653567])]), (41, [(9261620099085059951582339, [1, 3621443623747, 2557438707137])]), (42, [(26956343063321660661606079, [1, 5297630692733, 5088377168363])]), (43, [(148380990921871339073558471, [1, 15312186587767, 9690385502513])]), (44, [(742755812967275893879102367, [1, 30209324969269, 24586971530243])]), (45, [(2464904818423372497170532691, [1, 39737430890779, 62029798181929])]), (46, [(7796627119912187923303161727, [1, 84599957096443, 92158759738189])]), (47, [(46122101646331698276970118813, [1, 171293322470947, 269258024662079])]), (48, [(293772577742853844733039644711, [1, 546009156504601, 538035991234111])]), (49, [(466175140469730250722929943391, [1, 616011948992851, 756763145961541])]), (50, [(3898813935531541615780245995273, [1, 2048732346550817, 1903037232801769])]), (51, [(9510596667902228887156388258587, [1, 2465646825359831, 3857242071363677])]), (52, [(66667499869228667101174845349043, [1, 7497311559433673, 8892187464897691])]), (53, [(146631946275268659604640063455247, [1, 15758947653585551, 9304678808416897])]), (54, [(688068977465761614164223096812473, [1, 21310999481623441, 32287034592586153])]), (55, [(1690903284804772934240796218156567, [1, 38052850133461067, 44435654067286501])]), (56, [(9132124163051387376780469808293211, [1, 111079635131129381, 82212406912130431])]), (57, [(36814340790638482339014325392766703, [1, 228146868642098047, 161362463617199249])]), (58, [(238644761306641545525386113132654147, [1, 424889480265443227, 561663143925219961])]), (59, [(946942216197869294259896880226855393, [1, 987636918069463619, 958795888319828747])]), (60, [(3787113430887652026126242676547419979, [1, 1850855849976765139, 2046141751630843561])])])\n"}︡{"done":true}︡︡
︠59aeb83b-26a9-45fc-8fcf-cf1b8d77f92c︠









